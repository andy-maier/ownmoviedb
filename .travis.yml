# Control file for Travis CI (http://travis-ci.org)
# Must be located in the root directory of the Git repository.

# By default, notification emails are sent to the PR creator and commiter.
notifications:
  email: false

# Disabling the distro, so we get the latest.
# Note that for Python 3.7 and higher, at least Ubuntu xenial is required.
# dist:
#   - xenial  # 16.04, default since 6/2019
#   - bionic  # 18.04

# We define the job matrix explicitly, in order to minimize the
# combinations.
# For OS-X, using an explicit matrix is required, because Travis at
# this point only has half-baked support for Python on OS-X that does
# not work. Also, on OS-X, it needs to be invoked with language=generic
# and an empty 'python' variable in order to prevent that Travis attempts
# to install Python.
# TODO: Figure out how specific versions of Python 3.x can be used with OS-X
matrix:
  include:
    - os: linux
      language: python
      python: "2.7"
      env:
        - PACKAGE_LEVEL=minimum
    - os: linux
      language: python
      python: "2.7"
      env:
        - PACKAGE_LEVEL=latest
#    - os: linux
#      language: python
#      python: "3.4"
#      env:
#        - PACKAGE_LEVEL=minimum
#    - os: linux
#      language: python
#      python: "3.4"
#      env:
#        - PACKAGE_LEVEL=latest
#    - os: linux
#      language: python
#      python: "3.5"
#      env:
#        - PACKAGE_LEVEL=minimum
#    - os: linux
#      language: python
#      python: "3.5"
#      env:
#        - PACKAGE_LEVEL=latest
#    - os: linux
#      language: python
#      python: "3.6"
#      env:
#        - PACKAGE_LEVEL=minimum
#    - os: linux
#      language: python
#      python: "3.6"
#      env:
#        - PACKAGE_LEVEL=latest
    - os: linux
      language: python
      python: "pypy"   # Python 2.7.13 (as of 11/2019)
      env:
        - PACKAGE_LEVEL=minimum
    - os: linux
      language: python
      python: "pypy"   # Python 2.7.13 (as of 11/2019)
      env:
        - PACKAGE_LEVEL=latest
#    - os: linux
#      language: python
#      python: "pypy3"   # Python 3.6.1 (as of 11/2019)
#      env:
#        - PACKAGE_LEVEL=minimum
#    - os: linux
#      language: python
#      python: "pypy3"   # Python 3.6.1 (as of 11/2019)
#      env:
#        - PACKAGE_LEVEL=latest
    - os: osx
      language: generic
      python:
      env:
        - PACKAGE_LEVEL=minimum
        - PYTHON=2
    - os: osx
      language: generic
      python:
      env:
        - PACKAGE_LEVEL=latest
        - PYTHON=2
#    - os: osx
#      language: generic
#      python:
#      env:
#        - PACKAGE_LEVEL=minimum
#        - PYTHON=3
#    - os: osx
#      language: generic
#      python:
#      env:
#        - PACKAGE_LEVEL=latest
#        - PYTHON=3

before_install:
  - if [[ "$TRAVIS_BRANCH" == "manual-ci-run" ]]; then
      export _NEED_REBASE=true;
    fi
  - if [[ -n $_NEED_REBASE ]]; then git fetch origin master; fi
  - if [[ -n $_NEED_REBASE ]]; then git branch master FETCH_HEAD; fi
  - if [[ -n $_NEED_REBASE ]]; then git rebase master; fi
  - git branch -av

# commands to install dependencies
install:
  - if [[ "$TRAVIS_BRANCH" == "manual-ci-run" || "$TRAVIS_PULL_REQUEST_BRANCH" == "manual-ci-run" ]]; then
      export _MANUAL_CI_RUN=true;
    fi
  - if [[ "$TRAVIS_OS_NAME" == "osx" ]]; then
      if [[ "${PYTHON:0:1}" == "2" ]]; then
        export PYTHON_CMD=python;
        export PIP_CMD=pip;
      else
        export PYTHON_CMD=python3;
        export PIP_CMD=pip3;
      fi;
   else
      export PYTHON_CMD=python;
      export PIP_CMD=pip;
    fi;
    echo "PYTHON_CMD=$PYTHON_CMD";
    echo "PIP_CMD=$PIP_CMD"
  - if [[ "$TRAVIS_OS_NAME" == "osx" ]]; then
      if [[ "${PYTHON:0:1}" == "2" ]]; then
        OSX_PYTHON_PKG=python;
      else
        OSX_PYTHON_PKG=python3;
      fi;
      echo "OSX_PYTHON_PKG=$OSX_PYTHON_PKG";
    fi
  - if [[ "$TRAVIS_OS_NAME" == "osx" ]]; then
      brew update;
    fi
  - if [[ "$TRAVIS_OS_NAME" == "osx" ]]; then
      brew ls --versions $OSX_PYTHON_PKG && brew upgrade $OSX_PYTHON_PKG || brew install $OSX_PYTHON_PKG;
    fi
  - if [[ "$TRAVIS_OS_NAME" == "osx" ]]; then
      virtualenv venv -p $PYTHON_CMD && source venv/bin/activate;
    fi
  - $PYTHON_CMD remove_duplicate_setuptools.py
  - $PIP_CMD list
  - make platform
  - make install
  - make develop
  - $PIP_CMD list

# commands to run builds & tests
script:
  - make check
  - if [[ -n $_MANUAL_CI_RUN ]]; then make pylint; fi
  - make test
  - if [[ -n $_MANUAL_CI_RUN ]]; then make build; fi
  - if [[ -n $_MANUAL_CI_RUN ]]; then make builddoc; fi

after_success:
  - if [[ "$TRAVIS_OS_NAME" == "linux" && "$TRAVIS_PYTHON_VERSION" == "2.7" && "$PACKAGE_LEVEL" == "latest" && -z $_MANUAL_CI_RUN ]]; then
      coveralls;
    fi
